Cygwin Issues

* Configuration
** update locatedb by cron
** integrate w/ emacs
***** .emacs stuff  	

The third option. I am using NTEmacs + EmacsW32 + Cygwin. This way I
have a native Windows application with Unix utilities and bash
shell. The makefiles work, I have never used M-x whois though. I
cannot think of any immediate drawbacks of this setup.

Here are interesting bits of my setup, basically very similar to http://www.emacswiki.org/emacs/NTEmacsWithCygwin:

(setq cygwin-root "c:/cygwin/")
(setq private-bin (concat home-dir "/usr/bin"))
(setq exec-path (cons private-bin exec-path))
(setenv "PATH" (concat private-bin ";" (getenv "PATH")))
; Add Cygwin Emacs stuff
(add-to-load-path "/usr/share/emacs/site-lisp")
; Add Cygwin Info pages
(add-to-list 'Info-default-directory-list
             (concat cygwin-root "usr/share/info/"))

(setq shell-file-name "bash")
(setenv "SHELL" shell-file-name)
(setq explicit-shell-file-name shell-file-name)

(setq w32shell-cygwin-bin "c:\\cygwin\\bin")
(require 'w32shell)
(w32shell-add-emacs)
(w32shell-set-shell "cygwin")

=========

I also installed cygwin-mount, which helps a bunch. Also, I had to
switch from ispell to aspell. Finally, a little bit of .emacs
tweaking, and I was good to go:

;;;;;;;;;;;;;;;;;;;;;;
;;CygForTheWin
;;*cygwin
(when (equal system-type 'windows-nt) 
(message "Setting up Cygwin...")
(let* ((cygwin-root "c:")
       (cygwin-bin (concat cygwin-root "/bin"))
       (gambit-bin "/usr/local/Gambit-C/4.0b22/bin/")
       (snow-bin "/usr/local/snow/current/bin")
       (mysql-bin "/wamp/bin/mysql/mysql5.0.51a/bin/"))
   (setenv "PATH" (concat cygwin-bin ";" ;
                          snow-bin ";" 
                          gambit-bin ";"
                          mysql-bin ";"
                          "c:/usr/local/jdk1.60_03/bin/"
                          ".;")  
           (getenv "PATH"))
   (setq exec-path (cons cygwin-bin exec-path)))

(require 'cygwin-mount)
(cygwin-mount-activate)

(setq shell-file-name "bash")
(setq explicit-shell-file-name "bash")

(defun jonnay-cygwin-shell ()
  "Wrapper around cygwin-shell so that it doesn't throw an error"
  (interactive)
  (condition-case e
   (cygwin-shell)
   (message "There was an error trying to launch the shell: %s" e)))

(message "Setting up Cygwin...Done")
* Packages
* Problems
** xterm vs urxvt vs terminator vs mintty
*** terminal cut and paste
+ 2.5 Customizing bash
====================

To set bash up so that cut and paste work properly, click on the
"Properties" button of the window, then on the "Misc" tab.  Make sure
that "Quick Edit" is checked and "Fast Pasting" isn't.  These settings
will be remembered next time you run bash from that shortcut. Similarly
you can set the working directory inside the "Program" tab. The entry
"%HOME%" is valid.

   Your home directory should contain three initialization files that
control the behavior of bash.  They are `.profile', `.bashrc' and
`.inputrc'.  These initialization files will only be read if `HOME' is
defined before starting bash.

   `.profile' (other names are also valid, see the bash man page)
contains bash commands.  It is executed when bash is started as login
shell, e.g. from the command `bash --login'.  This is a useful place to
define and export environment variables and bash functions that will be
used by bash and the programs invoked by bash.  It is a good place to
redefine `PATH' if needed.  We recommend adding a ":." to the end of
`PATH' to also search the current working directory (contrary to DOS,
the local directory is not searched by default).  Also to avoid delays
you should either `unset' `MAILCHECK' or define `MAILPATH' to point to
your existing mail inbox.

   `.bashrc' is similar to `.profile' but is executed each time an
interactive bash shell is launched.  It serves to define elements that
are not inherited through the environment, such as aliases. If you do
not use login shells, you may want to put the contents of `.profile' as
discussed above in this file instead.


     shopt -s nocaseglob

will allow bash to glob filenames in a case-insensitive manner.  Note
that `.bashrc' is not called automatically for login shells. You can
source it from `.profile'.

   `.inputrc' controls how programs using the readline library
(including `bash') behave.  It is loaded automatically.  For full
details see the `Function and Variable Index' section of the GNU
`readline' manual.  Consider the following settings:


     # Ignore case while completing
     set completion-ignore-case on
     # Make Bash 8bit clean
     set meta-flag on
     set convert-meta off
     set output-meta on

The first command makes filename completion case insensitive, which can
be convenient in a Windows environment.  The next three commands allow
`bash' to display 8-bit characters, useful for languages with accented
characters.  Note that tools that do not use `readline' for display,
such as `less' and `ls', require additional settings, which could be
put in your `.bashrc':


     alias less='/bin/less -r'
     alias ls='/bin/ls -F --color=tty --show-control-chars'
*** startx no work
**** now a .exe see man startxwin
*** shell variables or environment-- all set?
**** very big question
*** W7 vs XP
** printing
*** general
**** customize 'printer-name' to //server/printer
**** M-x lpr-buffer
**** turboprint in linux ie canon i860
**** There is W32 print - use browser
*** sync issues
***** unison set?
***** dropbox and fat32 issue

