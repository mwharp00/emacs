
* how to write
To apply changes, use the Save or Set buttons.
For details, see Saving Customizations in the Emacs manual.

                                          Search 

 Operate on all settings in this buffer:
  Set for current session   Save for future sessions 
  Undo edits   Reset to saved   Erase customizations     Exit 

Hide Org Capture Templates:
INS
    State : STANDARD.
   Templates for the creation of new entries. Hide   
   
   Each entry is a list with the following items:
   
   keys         The keys that will select the template, as a string, characters
                only, for example "a" for a template to be selected with a
                single key, or "bt" for selection with two keys.  When using
                several keys, keys using the same prefix key must be together
                in the list and preceded by a 2-element entry explaining the
                prefix key, for example
   
                        ("b" "Templates for marking stuff to buy")
   
                The "C" key is used by default for quick access to the
                customization of the template variable.  But if you want to use
                that key for a template, you can.
   
   description  A short string describing the template, will be shown during
                selection.
   
   type         The type of entry.  Valid types are:
                  entry       an Org-mode node, with a headline. Will be
                              filed as the child of the target entry or as
                              a top-level entry.
                  item        a plain list item, will be placed in the
                              first plain list at the target
                              location.
                  checkitem   a checkbox item.  This differs from the
                              plain list item only is so far as it uses a
                              different default template.
                  table-line  a new line in the first table at target location.
                  plain       text to be inserted as it is.
   
   target       Specification of where the captured item should be placed.
                In Org-mode files, targets usually define a node.  Entries will
                become children of this node, other types will be added to the
                table or list in the body of this node.
   
                Most target specifications contain a file name.  If that file
                name is the empty string, it defaults to `org-default-notes-file'.
                A file can also be given as a variable, function, or Emacs Lisp
                form.
   
                Valid values are:
   
                (file "path/to/file")
                    Text will be placed at the beginning or end of that file
   
                (id "id of existing org entry")
                    File as child of this entry, or in the body of the entry
   
                (file+headline "path/to/file" "node headline")
                    Fast configuration if the target heading is unique in the file
   
                (file+olp "path/to/file" "Level 1 heading" "Level 2" ...)
                    For non-unique headings, the full path is safer
   
                (file+regexp  "path/to/file" "regexp to find location")
                    File to the entry matching regexp
   
                (file+datetree "path/to/file")
                    Will create a heading in a date tree for today's date
   
                (file+datetree+prompt "path/to/file")
                    Will create a heading in a date tree, prompts for date
   
                (file+function "path/to/file" function-finding-location)
                    A function to find the right location in the file
   
                (clock)
                   File to the entry that is currently being clocked
   
                (function function-finding-location)
                   Most general way, write your own function to find both
                   file and location
   
   template     The template for creating the capture item.  If you leave this
                empty, an appropriate default template will be used.  See below
                for more details.  Instead of a string, this may also be one of
   
                    (file "/path/to/template-file")
                    (function function-returning-the-template)
   
                in order to get a template from a file, or dynamically
                from a function.
   
   The rest of the entry is a property list of additional options.  Recognized
   properties are:
   
    :prepend            Normally newly captured information will be appended at
                        the target location (last child, last table line,
                        last list item...).  Setting this property will
                        change that.
   
    :immediate-finish   When set, do not offer to edit the information, just
                        file it away immediately.  This makes sense if the
                        template only needs information that can be added
                        automatically.
   
    :empty-lines        Set this to the number of lines the should be inserted
                        before and after the new item.  Default 0, only common
                        other value is 1.
   
    :clock-in           Start the clock in this item.
   
    :clock-keep         Keep the clock running when filing the captured entry.
   
    :clock-resume       Start the interrupted clock when finishing the capture.
                        Note that :clock-keep has precedence over :clock-resume.
                        When setting both to `t', the current clock will run and
                        the previous one will not be resumed.
   
    :unnarrowed         Do not narrow the target buffer, simply show the
                        full buffer.  Default is to narrow it so that you
                        only see the new stuff.
   
    :table-line-pos     Specification of the location in the table where the
                        new line should be inserted.  It should be a string like
                        "II-3", meaning that the new line should become the
                        third line before the second horizontal separator line.
   
    :kill-buffer        If the target file was not yet visited by a buffer when
                        capture was invoked, kill the buffer again after capture
                        is finalized.
   
   The template defines the text to be inserted.  Often this is an
   org-mode entry (so the first line should start with a star) that
   will be filed as a child of the target headline.  It can also be
   freely formatted text.  Furthermore, the following %-escapes will
   be replaced with content and expanded in this order:
   
     %[pathname] insert the contents of the file given by `pathname'.
     %(sexp)     evaluate elisp `(sexp)' and replace with the result.
     %<...>      the result of format-time-string on the ... format specification.
     %t          time stamp, date only.
     %T          time stamp with date and time.
     %u, %U      like the above, but inactive time stamps.
     %a          annotation, normally the link created with `org-store-link'.
     %i          initial content, copied from the active region.  If %i is
                 indented, the entire inserted text will be indented as well.
     %A          like %a, but prompt for the description part.
     %c          current kill ring head.
     %x          content of the X clipboard.
     %k          title of currently clocked task.
     %K          link to currently clocked task.
     %n          user name (taken from `user-full-name').
     %f          file visited by current buffer when org-capture was called.
     %F          full path of the file or directory visited by current buffer.
     %:keyword   specific information for certain link types, see below.
     %^g         prompt for tags, with completion on tags in target file.
     %^G         prompt for tags, with completion on all tags in all agenda files.
     %^t         like %t, but prompt for date.  Similarly %^T, %^u, %^U.
                 You may define a prompt like %^{Please specify birthday.
     %^C         interactive selection of which kill or clip to use.
     %^L         like %^C, but insert as link.
     %^{prop}p   prompt the user for a value for property `prop'.
     %^{prompt}  prompt the user for a string and replace this sequence with it.
                 A default value and a completion table ca be specified like this:
                 %^{prompt|default|completion2|completion3|...}.
     %?          After completing the template, position cursor here.
   
   Apart from these general escapes, you can access information specific to the
   link type that is created.  For example, calling `org-capture' in emails
   or gnus will record the author and the subject of the message, which you
   can access with "%:from" and "%:subject", respectively.  Here is a
   complete list of what is recorded for each link type.
   
   Link type               |  Available information
   ------------------------+------------------------------------------------------
   bbdb                    |  %:type %:name %:company
   vm, wl, mh, mew, rmail  |  %:type %:subject %:message-id
                           |  %:from %:fromname %:fromaddress
                           |  %:to   %:toname   %:toaddress
                           |  %:fromto (either "to NAME" or "from NAME")
                           |  %:date
                           |  %:date-timestamp (as active timestamp)
                           |  %:date-timestamp-inactive (as inactive timestamp)
   gnus                    |  %:group, for messages also all email fields
   w3, w3m                 |  %:type %:url
   info                    |  %:type %:file %:node
   calendar                |  %:type %:date
Groups: Org Capture
==========

     (setq org-capture-templates
      '(("b" "Todo" entry (file+headline "~/org/sync/todo.index.org" "Pay Bills")
             "* TODO %?\n  %^t\n  %a")
        ("j" "Journal" entry (file+datetree "~/org/journal.org")
             "* %?\nEntered on %U\n  %i\n  %a")))
     (setq org-capture-templates
      '(("t" "Todo" entry (file+headline "~/org/gtd.org" "Tasks")
             "* TODO %?\n  %i\n  %a")
        ("j" "Journal" entry (file+datetree "~/org/journal.org")
             "* %?\nEntered on %U\n  %i\n  %a")))
